<?php

namespace app\controllers;

use Yii;
use app\models\Devolucion;
use app\models\DevolucionSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\data\SqlDataProvider;
use yii\helpers\ArrayHelper;
/**
 * DevolucionController implements the CRUD actions for Devolucion model.
 */
class DevolucionController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Devolucion models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new DevolucionSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }
/*        $count = Yii::$app->db->createCommand('
        SELECT ID_PRE, DETA_ART AS DETALLE, SERI_ART AS N_SERIE, COLO_ART AS COLOR, CONCAT(NOMB_PER," ",APPA_PER," ",APMA_PER) AS NOMBRE, FECH_PRE AS FECHA, HORA_PRE AS HORA FROM PERSONA JOIN PRESTAMO ON ID_PER=PERS_PRE JOIN PRESTADO ON ID_PRE = PRES_PRS JOIN articulo ON ARTI_PRS=ID_ART WHERE DISP_ART=:DISP_ART
        ', [':DISP_ART' => 1])->queryScalar();

        $dataProvider = new SqlDataProvider([
            'sql' => 'SELECT ID_PRE, DETA_ART AS DETALLE, SERI_ART AS N_SERIE, COLO_ART AS COLOR, CONCAT(NOMB_PER," ",APPA_PER," ",APMA_PER) AS NOMBRE, FECH_PRE AS FECHA, HORA_PRE AS HORA FROM PERSONA JOIN PRESTAMO ON ID_PER=PERS_PRE JOIN PRESTADO ON ID_PRE = PRES_PRS JOIN articulo ON ARTI_PRS=ID_ART WHERE DISP_ART=:DISP_ART',
            'params' => [':DISP_ART' => 1],
            'totalCount' => $count,
            'sort' => [
                'attributes' => [
                    'DETALLE',
                    'N_SERIE',
                    'NOMBRE',
                    'fecha' => [
                        'asc' => ['FECHA' => SORT_ASC, 'FECHA' => SORT_ASC],
                        'desc' => ['HORA' => SORT_DESC, 'HORA' => SORT_DESC],
                        'default' => SORT_DESC,
                        'label' => 'fecha',
                    ],
                ],
            ],
            'pagination' => [
                'pageSize' => 5,
            ],
        ]);
        // get the user records in the current page
        $models = $dataProvider->getModels();
        return $this->render('index', [
            'dataProvider' => $dataProvider]);
    }

*/    /**
     * Displays a single Devolucion model.
     * @param string $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Devolucion model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new \app\models\Devolucion();
        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            $model2 = new \app\models\Devuelto();
            $model2->DEVO_DVS=$model->ID_DEV;
            $model2->PRES_DVS = $model->PRES_DEV;
            $model2->save();
            $model3=\app\models\Prestado::find()->where(["ID_PRS" => $model->PRES_DEV])->one();
            $model4=\app\models\Articulo::find()->where(["ID_ART" => $model3->ARTI_PRS])->one();
            $model4->DISP_ART=0;
            $model4->save();
            return $this->redirect(['view', 'id' => $model->ID_DEV]);
        } else {
            if (Devolucion::get_articulos()==null) {
                return $this->render('create', [
                'model' => $model]);
            } else {
                return $this->render('no-disp');
            }
        }
    }

    /**
     * Updates an existing Devolucion model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->ID_DEV]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Devolucion model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the Devolucion model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return Devolucion the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Devolucion::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
