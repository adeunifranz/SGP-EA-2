<?php

namespace app\controllers;

use Yii;
use app\models\Articulo;
use app\models\ArticuloSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\bootstrap\Modal;
use yii\web\UploadedFile;
use yii\helpers\ArrayHelper;
use yii\helpers\Html;
/**
 * ArticuloController implements the CRUD actions for Articulo model.
 */
class ArticuloController extends Controller
{
    /**
     * @inheritdoc
     */

    public function actionVolver()
    {
        $this->goBack();
    }

    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Articulo models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new ArticuloSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Displays a single Articulo model.
     * @param string $id
     * @return mixed
     */
    public function actionView($id)
    {
        $model2 = \app\models\Computadora::find()
        ->where(['ARTI_COM' => $id])
        ->one();
/*        echo '<pre>'; print_r($model2);echo '</pre>';
        echo '<pre>'; print_r($this->findModel($id));exit;echo '</pre>';
*/        return $this->render('view', [
            'model' => $this->findModel($id),'model2'=> $model2
        ]);
    }

    /**
     * Creates a new Articulo model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */

    //
    public function actionCreate2()
    {
        $model = new Articulo();
        if (Yii::$app->request->isPost && $model->load(Yii::$app->request->post()) && $model->validate()) {
            // $model->save()

            $image = UploadedFile::getInstance($model, 'foto');
            if ($image === null) {
                echo 'no se subio ninguna imagen';
            } else {
//                echo '<pre>'; print_r($image);exit;echo '</pre>';
                $imageName=$model->DETA_ART . '.' . $image->getExtension();
                //echo Yii::getAlias('@articuloImgPath'.'/').$imageName;exit;
                $image->saveAs(Yii::getAlias('@articuloImgPath').'/'.$imageName);
                $model->FOTO_ART = $imageName;
            }
            $model->save();


            return $this->renderAjax('view', ['model' => $model]);
        }
        return $this->renderAjax('_form', ['model' => $model]);
    }

    public function actionCreate()
    {
        $model = new Articulo();
        $model2 = new \app\models\Computadora();
        $tipos = ArrayHelper::map(\app\models\Tipo::find()->all(), 'ID_TIP', 'DETA_TIP');
        if ($model->load(Yii::$app->request->post())&&$model->save()
          &&$model2->load(Yii::$app->request->post())) {
            $model2->ARTI_COM=$model->ID_ART;
            $image = UploadedFile::getInstance($model, 'foto');
            if ($image === null) {
                echo 'no se subio ninguna imagen';
            } else {
                $imageName=$model->DETA_ART . '.' . $image->getExtension();
                //echo Yii::getAlias('@articuloImgPath'.'/').$imageName;exit;
                $image->saveAs(Yii::getAlias('@articuloImgPath').'/'.$imageName);
                $model->FOTO_ART = $imageName;
                $model->save();
            }
            if ($model2->validate()) {
                $model2->save();
            } else {
                echo 'ERROR AL GUARDAR REGISTRO!!!';
                echo '<pre>'; print_r($model->attributes);echo '</pre>';
                echo '<pre>'; print_r($model2->attributes);echo '</pre>';
                echo '<h1><strong>'.Html::a('Revise los datos', ['volver'], ['class' => 'btn btn-default']).'</strong></h1>';
                exit;
            }
            return $this->redirect(['view', 'id' => $model->ID_ART, 'id2' => $model2->ID_COM]);
        } else {
            return $this->render('create', [
                'model' => $model, 'model2' => $model2, 'tipos' => $tipos
            ]);
        }
    }

    /**
     * Updates an existing Articulo model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model2 = \app\models\Computadora::find()
        ->where(['ARTI_COM' => $id])
        ->one();
        $model = $this->findModel($id);
        $tipos = ArrayHelper::map(\app\models\Tipo::find()->all(), 'ID_TIP', 'DETA_TIP');

        if ($model->load(Yii::$app->request->post()) && $model->save()
          &&$model2->load(Yii::$app->request->post())) { 
            $image = UploadedFile::getInstance($model, 'foto');
            if ($image!=null) {
                  $imageName=$model->DETA_ART . '.' . $image->getExtension();
                // echo '<pre>'; print_r($image);echo'</pre>';
                // echo Yii::getAlias('@articuloImgPath').'/'.$model->FOTO_ART;
                // echo Yii::getAlias('@articuloImgPath').'/'.$imageName;exit;
                  if (!$model->FOTO_ART===null)
                    unlink(Yii::getAlias('@articuloImgPath').'/'.$model->FOTO_ART);
                 $image->saveAs(Yii::getAlias('@articuloImgPath').'/'.$imageName);
                 $model->FOTO_ART = $imageName;
                 $model->save();
                 Yii::$app->cache->flush();
            }
            //$model->save();
            if ($model2->validate()) {
                $model2->save();
            } else {
                echo 'ERROR AL GUARDAR REGISTRO!!!';
                echo '<pre>'; print_r($model->attributes);echo '</pre>';
                echo '<pre>'; print_r($model2->attributes);echo '</pre>';
                echo '<h1><strong>'.Html::a('Revise los datos', ['volver'], ['class' => 'btn btn-default']).'</strong></h1>';
                exit;
            }
            return $this->redirect(['view', 'id' => $model->ID_ART, 'id2' => $model2->ID_COM]);
        } else {
            return $this->render('update', [
                'model' => $model, 'model2' => $model2, 'tipos' => $tipos
            ]);
        }
    }
    /**
     * Deletes an existing Articulo model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();
        
        return $this->redirect(['index']);
    }

    /**
     * Finds the Articulo model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return Articulo the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Articulo::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
